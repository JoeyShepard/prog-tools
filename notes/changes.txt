differences from other forths
- no recurse word needed
- no unloop needed
- no stepping over return addresses
- redefined words also apply to compiled words
- dictionary is data only - no word definitions or headers
- stacks and dictionary wrap - no under/overflow checking
- no combined primitives like 1+ or 0= unless needed
- compiled words can't access outer interpretter
- alignment behavior
- no base - either decimal or 0x for hex
  - no hex or decimal words
- state returns state not address of state
- no \ on keypad so use (
- dictionary size is power of 2 so negative addresses work
- if/do/begin typed so cant mix up
- >NUMBER takes different number and type of arguments and works with negatives
- KEY takes argument for waiting or not waiting
- no PICK or ROLL
- no immediate
  - not needed if make planned changes to STATE
- lots of words interpret only like WORDS
- var and create align address
- I and J work in words without skipping over return address
- no EXEC in EXEC
- EXEC in word only works on body
- strcasecmp doesn't treat as lowercase. already fixed in dev.
- had to leave out DOES>
- cannot redefine primitives
- no vocabularies
